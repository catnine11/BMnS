<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gd.bmss.mapper.StockDaoImpl">

<!-- 재고 조건 만족하는 도서 조회  -->
<select id="selectStockable" resultType="BStatusVo">
 <![CDATA[
  SELECT  X.BOOK_SEQ FROM
(SELECT  B.BOOK_SEQ, B.STATUS_TITLE, B.STATUS_CODE, A.RETURN_DATE, B.BOOK_CODE,
           COUNT(*) OVER (PARTITION BY B.BOOK_CODE) AS BOOK_COUNT
    FROM BOOK_BORROW A
    RIGHT JOIN BOOK_STATUS B ON A.BOOK_SEQ = B.BOOK_SEQ
    WHERE (RETURN_DATE <= TO_DATE('20230913' || '000000', 'YYYYMMDDHH24MISS') -60
           OR RETURN_DATE IS NULL)
           AND STATUS_CODE = 'A') X
WHERE X.BOOK_COUNT > 1 ]]>
</select>


<!-- 재고 상태로 변경  -->
<update id="normalToStocks">
  UPDATE BOOK_STATUS SET STATUS_CODE='B' WHERE BOOK_SEQ IN(<![CDATA[
  SELECT  X.BOOK_SEQ FROM
(SELECT  B.BOOK_SEQ, B.STATUS_TITLE, B.STATUS_CODE, A.RETURN_DATE, B.BOOK_CODE,
           COUNT(*) OVER (PARTITION BY B.BOOK_CODE) AS BOOK_COUNT
    FROM BOOK_BORROW A
    RIGHT JOIN BOOK_STATUS B ON A.BOOK_SEQ = B.BOOK_SEQ
    WHERE (RETURN_DATE <= TO_DATE('20230913' || '000000', 'YYYYMMDDHH24MISS') -60
           OR RETURN_DATE IS NULL)
           AND STATUS_CODE = 'A') X
WHERE X.BOOK_COUNT > 1 ]]>)
</update>

<update id="normalToStock" parameterType="BStatusVo" >
  UPDATE BOOK_STATUS SET STATUS_CODE=#{status_code} WHERE BOOK_SEQ =#{book_seq}
</update>




<!-- 재고 추가  -->
<insert id="addStock" parameterType="StockVo">
  INSERT INTO BOOK_STOCK
  (STOCK_NUMBER, SELL_STATUS, BOOK_SEQ, BOOK_PRICE)
  VALUES(STOCK_NUMBER.NEXTVAL, 'N', #{book_seq}, 0)
</insert>

<!-- <insert id="addStocks"> -->
<!--     INSERT ALL  -->
<!--     <foreach collection="list" item="book_seq"> -->
<!--         INTO BOOK_STOCK (STOCK_NUMBER, SELL_STATUS, BOOK_SEQ, BOOK_PRICE)  -->
<!--         VALUES (STOCK_NUMBER.NEXTVAL, 'N', #{book_seq}, 0) -->
<!--     </foreach> -->
<!--     SELECT * FROM dual -->
<!-- </insert> -->


<!-- 판매 불가->판매가능 상태 업데이트 -->
<update id="sellAble">
UPDATE BOOK_STOCK SET SELL_STATUS =#{status} WHERE BOOK_SEQ =#{num}
</update>
<!-- 판매 불가->판매가능 다중 상태 업데이트 -->
<update id="sellAbleMany">
UPDATE BOOK_STOCK SET SELL_STATUS ='Y' WHERE STOCK_NUMBER IN
<foreach collection="list" item="stock_number" open="(" separator="," close=")" >
#{stock_number}
</foreach>
</update>
<!-- 판매불가 상태 업데이트 다중  -->
<update id="notSellMany">
UPDATE BOOK_STOCK SET SELL_STATUS ='N' WHERE STOCK_NUMBER IN
<foreach collection="list" item="stock_number" open="(" separator="," close=")" >
#{stock_number}
</foreach>
</update>



<!-- 재고목록 다중 삭제 -->
<delete id="stocksDel">
DELETE FROM BOOK_STOCK
WHERE SELL_STATUS ='N' AND STOCK_NUMBER IN
<foreach collection="list" item="stock_number" open="(" separator="," close=")">
#{stock_number}
</foreach>
</delete>
	
	<resultMap type="StockVo" id="StockMap">
    <result column="STOCK_NUMBER" property="stock_number"/>
    <result column="SELL_STATUS" property="sell_status"/>
    <result column="STBOOK_SEQ" property="book_seq"/>    
    <result column="BOOK_PRICE" property="book_price"/>
    <result column="STATUS_TITLE" property="status_title"/>
    <result column="STATUS_CODE" property="status_code"/> 
    <result column="BOOK_CODE" property="book_code"/>
	</resultMap>
	
	<!-- 재고 목록 조회  -->
<select id="getStocks" resultMap="StockMap">
SELECT DISTINCT STATUS_TITLE, STATUS_CODE,
       BOOK_CODE, BOOK_PRICE
FROM BOOK_STOCK BT
LEFT JOIN BOOK_STATUS BS ON BT.BOOK_SEQ = BS.BOOK_SEQ
WHERE STATUS_CODE = 'B'
</select>

<resultMap type="com.gd.bmss.vo.BookInfoVo" id="InfoMap">
	<result column="BOOK_CODE" property="book_code"/>
	<result column="ISBN" property="isbn"/>
	<result column="TITLE" property="title"/>
	<result column="AUTHOR" property="author"/>
	<result column="GENRE_CODE" property="genre_code"/>
	<result column="GENRE_NAME" property="genre_name"/>
	<result column="PUBLISHER" property="publisher"/>
	<result column="PUBLISH_DATE" property="publish_date"/>
	<result column="THUMBNAIL" property="thumbnail"/>
	<result column="CONTENT" property="content"/>
	<result column="INTRO" property="intro"/>
	<result column="REVIEW" property="review"/>
	<result column="AUTHORINFO" property="authorinfo"/>
	<result column="STOCK_NUMBER" property="stock_number"/>
	<collection property="bsVo" resultMap="bstmap"></collection>
</resultMap>

<resultMap type="BStatusVo" id="bstmap">
<result property="book_seq" column="BOOK_SEQ" />
<result property="status_code" column="STATUS_CODE" />
<result property="status_title" column="STATUS_TITLE" />
<result property="book_code" column="BOOK_CODE" />

</resultMap>


<!-- 유저가 판매중인 도서 조회 -->
<select id="getSellableStock" resultMap="InfoMap">
SELECT THUMBNAIL, BOOK_PRICE,AUTHOR, PUBLISHER,PUBLISH_DATE, STATUS_CODE,TITLE,b.BOOK_CODE,STOCK_NUMBER
FROM BOOK_STOCK BT
 JOIN BOOK_STATUS BS ON BT.BOOK_SEQ = BS.BOOK_SEQ
 JOIN BOOKINFO b ON B.BOOK_CODE =BS.BOOK_CODE 
WHERE STATUS_CODE = 'B'  AND SELL_STATUS='Y' AND BOOK_PRICE!=0 ORDER BY TITLE
</select>


<select id="getSalesDetail" resultType="BInfoVo">
SELECT THUMBNAIL, BOOK_PRICE,AUTHOR, PUBLISHER,PUBLISH_DATE, STATUS_CODE,TITLE,b.BOOK_CODE,ISBN,GENRE_CODE
FROM BOOK_STOCK BT
LEFT JOIN BOOK_STATUS BS ON BT.BOOK_SEQ = BS.BOOK_SEQ
LEFT JOIN BOOKINFO b ON B.BOOK_CODE =BS.BOOK_CODE 
WHERE  b.BOOK_CODE=#{book_code} ORDER BY TITLE
</select>


<select id="getInStock" resultMap="StockMap">
SELECT  STOCK_NUMBER,STATUS_TITLE, SELL_STATUS, BOOK_SEQ AS STBOOK_SEQ, STATUS_CODE, BOOK_CODE, BOOK_PRICE
FROM BOOK_STOCK BT
LEFT JOIN BOOK_STATUS USING(BOOK_SEQ)
WHERE STATUS_CODE = 'A'
</select>

<select id="booksDetail" resultMap="StockMap">
SELECT  STOCK_NUMBER,STATUS_TITLE, SELL_STATUS, BT.BOOK_SEQ AS STBOOK_SEQ, STATUS_CODE, BOOK_CODE, BOOK_PRICE
FROM BOOK_STOCK BT
LEFT JOIN BOOK_STATUS BS ON BT.BOOK_SEQ = BS.BOOK_SEQ WHERE BOOK_CODE=#{book_code} AND STATUS_CODE='B'
</select>

<update id="priceChange">
UPDATE BOOK_STOCK SET BOOK_PRICE=#{price} WHERE STOCK_NUMBER =#{number}
</update>

</mapper>
